from elasticsearch import Elasticsearch
import ssl
from flask import Flask, request

from sample_data import key_fields
from cosine_similarity import get_results

# Password for the 'elastic' user generated by Elasticsearch
ELASTIC_PASSWORD = "WYK3jpc56t7Wq8lQfcz9K53l"

# Found in the 'Manage Deployment' page
CLOUD_ID = "My_deployment:YXAtc291dGgtMS5hd3MuZWxhc3RpYy1jbG91ZC5jb206NDQzJGU5NDEzMDNkODA5ZDQyOTA4Mjk0NmMwMWJmMTAxMmM4JGU5NDc2ZGNmYWI0ZDQzZjlhOTBmZTE0NTA1NzJjZDYx"

app = Flask(__name__)

@app.route('/', methods=['GET'])
def index():
    query = request.args.get('query')
    # Create the client instance
    es = Elasticsearch(
        cloud_id=CLOUD_ID,
        basic_auth=("elastic", ELASTIC_PASSWORD),
        verify_certs=False,
        ssl_version=ssl.TLSVersion.TLSv1_2
    )

    # Successful response!
    # print(es.info())

    query = query.lower()

    es_query = {"query": {
        "multi_match" : {
        "query":    query,
        "fields": key_fields
        }
    }}

    resp = es.search(index="code_snippets", body={
        "query": es_query["query"]
    })

    #print(f"Response: {resp}")

    intermediate_results = {}

    print("Got %d Hits:" % resp['hits']['total']['value'])
    for hit in resp['hits']['hits']:
        print(f"{hit['_source']}")
        intermediate_results[hit['_source']['id']] = hit['_source']
    print(intermediate_results.values())
    ranked_results = get_results(query, list(intermediate_results.values()))
    print(ranked_results)

    code_results = []
    final_results = []
    for i,result_id in enumerate(ranked_results):
        print(f"\n\n\nResult {i+1}")
        print(intermediate_results[result_id]["presentableFormat"])
        code_results.append(intermediate_results[result_id]["presentableFormat"])
        final_results.append(intermediate_results[result_id])
    
    return {"code": code_results, "rank": ranked_results, "data": final_results}

app.run(port=8080)
